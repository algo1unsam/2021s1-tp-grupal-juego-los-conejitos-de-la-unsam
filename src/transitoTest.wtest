import wollok.game.*
import rabbit.*
import config.*
import transito.*
import sonidos.*

describe 'transito' {
//
//	const camion2L = new AutoDerechaIzquierda(image = "assets/camion2L.png")
//	const camion2R = new AutoIzquierdaDerecha(image = "assets/camion2R.png")
//	const camion1L = new AutoDerechaIzquierda(image = "assets/camion1L.png")
//	const camion1R = new AutoIzquierdaDerecha(image = "assets/camion1R.png")
//	const camion3L = new AutoDerechaIzquierda(image = "assets/camion3L.png")
//	const camion3R = new AutoIzquierdaDerecha(image = "assets/camion3R.png")
//	const camion4L = new AutoDerechaIzquierda(image = "assets/camion4L.png")
//	const camion4R = new AutoIzquierdaDerecha(image = "assets/camion4R.png")
	const auto1L = new AutoDerechaIzquierda(image = "assets/camion1L.png")
	const auto1R = new AutoIzquierdaDerecha(image = "assets/camion1R.png")
	const auto2L = new AutoDerechaIzquierda(image = "assets/camion2L.png")
	const auto2R = new AutoIzquierdaDerecha(image = "assets/camion2R.png")
//	const vehiculosDeIzquierdaADerecha = [ camion2R, camion1R, camion3R, camion4R ]
//	const vehiculosDeDerechaAIzquierda = [ camion2L, camion1L, camion3L, camion4L ]
////carretera de arriba que va de izquierda a derecha
//	const carreteraArriba = new Carretera(autosTrafico = vehiculosDeIzquierdaADerecha)
////carretera de abajo que va de derecha a izquierda
//	const carreteraAbajo = new Carretera(autosTrafico = vehiculosDeDerechaAIzquierda)
//
//	test "cargar listas de autos a carreteras" {
//		assert.equals([ camion2R, camion1R, camion3R, camion4R ], carreteraArriba.autosTrafico())
//		assert.equals([ camion2L, camion1L, camion3L, camion4L ], carreteraAbajo.autosTrafico())
//	}

	const posicionPrueba = new Position(x=10,y=2)
	const posicionPrueba2 = new Position(x=3,y=2)
	fixture{
		auto1L.position(posicionPrueba) 
		auto2L.position(posicionPrueba2) 
		
	}

	test "1-Testear estaAlBorde"{
		
		assert.equals(false,auto1L.estaAlBorde())
		assert.equals(true,auto2L.estaAlBorde())
		
		
	}
}

